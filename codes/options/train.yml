#### general settings
name: test

use_tb_logger: true
model: DRB
distortion: sr
scale: 4
gpu_ids: [0]

#### datasets
datasets:
  train: # 'train' is used as dataset['phase'] at option.py
    name: train
    mode: DRB  # DRB / DRB_no_patch
    aug: ~ #noise
    dataroot_GT: ../../REDS/train_sharp # ../datasets/DF2K/generated/tdsr/HR  # D:/REDS/sintel_GT
    dataroot_LR: ../../REDS/train_sharp_bicubic/X4 # ../datasets/DF2K/generated/tdsr/LR  # D:/REDS/sintel_LR
    use_shuffle: true
    n_workers: 4  # per GPU
    batch_size: 1
    GT_size: 512
    use_flip: true
    use_rot: true
    color: RGB
    data_type: seq
    position: mid # side_1st // side 2nd // mid
    ref_frame_num: 5 # 3 / 5 / 7 ...
    #    scale: ~  # written at option.py
  val:
    name: val
    mode: DRB
    dataroot_GT: ../../REDS/val_sharp # D:/REDS/val_sharp #../../../ntire20/DIV2K_valid_HR
    dataroot_LR: ../../REDS/val_sharp_bicubic/X4 # D:/REDS/val_sharp_bicubic/X4 # ../../../ntire20/Corrupted-va-x
    data_type: seq
    position: mid # side_1st // side 2nd // mid
    ref_frame_num: 5 # 3 / 5 / 7 ...
    # phase: ~  # written at option.py
    # scale: ~  # written at option.py

#### network structures
network_G:
  which_model_G: RRDBNet
  in_nc: 3
  out_nc: 3
  nf: 64
  nb: 23

network_D:
  which_model_D: discriminator_vgg_128
  in_nc: 3
  nf: 64

network_DRB:
  which_model_DRB: DRB_no_unet # DRB_mid // DRB_no_unet
  rgb_range: 1


#### path
path:
  pretrain_model_G: ../pretrained_model/RRDB_PSNR_x4.pth
  pretrain_model_DRB: ~ # ../experiments/name/models/160000_G.pth
  strict_load: true
  resume_state: ~ # ../experiments/name/training_state/160000.state
  root: H:/Proposed              # written at option.py
  #  experiment_root:  ~  # written at option.py
  #  test_root:  ~        # written at option.py
  #  models: ~            # written at option.py
  #  training_state: ~    # written at option.py
  #  val_images:  ~       # written at option.py

#### training settings: learning rate scheme, loss
train:
  lr_G: !!float 1e-4
  weight_decay_G: 0
  beta1_G: 0.9
  beta2_G: 0.999

  lr_D: !!float 1e-4
  weight_decay_D: 0
  beta1_D: 0.9
  beta2_D: 0.999

  lr_DRB: !!float 1e-4
  weight_decay_DRB: 0
  beta1_DRB: 0.9
  beta2_DRB: 0.999

  niter: 1200001
  warmup_iter: -1  # no warm up

#  # MultiStepLR_Restart
#  lr_scheme: MultiStepLR_Restart
#  lr_steps: [50000, 100000, 200000, 300000]
#  restarts: [250000, 500000, 750000]
#  restart_weights: [1, 1, 1]

  #  # CosineAnnealingLR_Restart
  lr_scheme: CosineAnnealingLR_Restart
  # four
  T_period: [300000, 300000, 300000, 300000]
  restarts: [300000, 600000, 900000]
  restart_weights: [0.99, 0.989, 0.988]
  eta_min: 0

  lr_gamma: 0.5

  pixel_criterion: cb   # l1 / cb
  pixel_weight: !!float 1e-3 # !!float 1e-2
  feature_criterion: cb # l1 / cb
  feature_weight: !!float 1e-8
  gan_type: ragan  # gan | ragan
  gan_weight: !!float 5e-3

  D_update_ratio: 1
  D_init_iters: 0

  manual_seed: 10
  val_freq: !!float 1e4

#### logger
## tensorboard --logdir ./tb_logger --port=6006
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e4
